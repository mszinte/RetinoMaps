"""-----------------------------------------------------------------------------------------pdf_maps.py-----------------------------------------------------------------------------------------Goal of the script:Concat all subject prf pdf in one-----------------------------------------------------------------------------------------Input(s):sys.argv[1]: main project directorysys.argv[2]: project name (correspond to directory)sys.argv[3]: number of subjectssys.argv[4]: group-----------------------------------------------------------------------------------------Output(s):pdf files with pycortex maps-----------------------------------------------------------------------------------------To run:0. To Run on meso (not on node)1. cd to function>>  cd ~/projects/RetinoMaps/analysis_code/postproc/2. run python command>> python pdf_maps.py [main directory] [project name] [group]-----------------------------------------------------------------------------------------Exemple:python pdf_maps.py /scratch/mszinte/data RetinoMaps 327-----------------------------------------------------------------------------------------Written by Martin Szinte (mail@martinszinte.net)Edited by Uriel Lascombes (uriel.lascombes@laposte.net)-----------------------------------------------------------------------------------------"""# General importsimport sysfrom pypdf import PdfMergerimport osimport json# Inputsmain_dir = sys.argv[1]project_dir = sys.argv[2]group = sys.argv[3]# load settingswith open('../settings.json') as f:    json_s = f.read()    analysis_info = json.loads(json_s)subjects = analysis_info['subjects']tasks = analysis_info['task_names']formats = analysis_info['formats']extensions = analysis_info['extensions']# prf mapsmaps = ['ecc','polar_255','size','rsq','loo_rsq','n']for map_ in maps :     merger_prf = PdfMerger()    for subject in subjects:        pdf_dir = '{}/{}/derivatives/pp_data/{}/fsnative/prf/pycortex/flatmaps_loo-avg_css'.format(main_dir,project_dir,subject)        pdf_fn = '{}_task-pRF_{}_css_avg-css.pdf'.format(subject,map_)        merger_prf.append('{}/{}'.format(pdf_dir,pdf_fn))            pdf_dir = "{}/{}/derivatives/pp_data/sub-all/fsnative/prf/pycortex".format(main_dir,project_dir)    os.makedirs(pdf_dir, exist_ok = True)    merger_prf.write('{}/sub-all_task-pRF_{}_css_avg-css.pdf'.format(pdf_dir,map_))    merger_prf.close()print('prf maps are done')# corr maps for format_, extension in zip(formats, extensions):    for task in tasks:         merger_corr = PdfMerger()        for subject in subjects:            pdf_dir = '{}/{}/derivatives/pp_data/{}/fsnative/corr/pycortex/flatmaps_corr'.format(main_dir,project_dir,subject)            pdf_fn = '{}_task-{}_correlations_corr.pdf'.format(subject,task)            merger_corr.append('{}/{}'.format(pdf_dir,pdf_fn))                    pdf_dir = "{}/{}/derivatives/pp_data/sub-all/fsnative/corr/pycortex".format(main_dir,project_dir)        os.makedirs(pdf_dir, exist_ok = True)                merger_corr.write('{}/sub-all_task-{}_correlations_corr.pdf'.format(pdf_dir,task))        merger_corr.close()print('correlations maps are done')       # glm maps    for format_, extension in zip(formats, extensions):    #Glm pdf    merger_glm = PdfMerger()    for n, subject in enumerate(subjects):        pdf_dir = '{}/{}/derivatives/pp_data/{}/{}/glm/pycortex/flatmaps_glm'.format(main_dir,project_dir,subject,format_)        pdf_fn = '{}_final_final.pdf'.format(subject)        merger_glm.append('{}/{}'.format(pdf_dir,pdf_fn))                pdf_dir = "{}/{}/derivatives/pp_data/sub-all/{}/glm/pycortex".format(main_dir,project_dir,format_)    os.makedirs(pdf_dir, exist_ok = True)        merger_glm.write('{}/sub-all_glm_final.pdf'.format(pdf_dir))            merger_glm.close()      print('glm maps are done')       # # Define permission cmd# os.system("chmod -Rf 771 {main_dir}/{project_dir}".format(main_dir=main_dir, project_dir=project_dir))# os.system("chgrp -Rf {group} {main_dir}/{project_dir}".format(main_dir=main_dir, project_dir=project_dir, group=group))# #Glm pdf# merger_ecc = PdfMerger()# merger_polar = PdfMerger()# merger_size = PdfMerger()# merger_r2 = PdfMerger()# merger_loo_r2 = PdfMerger()# merger_n = PdfMerger()# for n, subject in enumerate(subjects):#     pdf_dir = '{}/{}/derivatives/pp_data/{}/fsnative/prf/pycortex/flatmaps_loo-avg_css'.format(main_dir,project_dir,subject)#     pdf_ecc_fn = '{}_task-pRF_ecc_css_avg-css.pdf'.format(subject)#     pdf_polar_fn = '{}_task-pRF_polar_255_css_avg-css.pdf'.format(subject)#     pdf_size_fn = '{}_task-pRF_size_css_avg-css.pdf'.format(subject)#     pdf_rsq_fn = '{}_task-pRF_rsq_css_avg-css.pdf'.format(subject)#     pdf_loo_rsq_fn = '{}_task-pRF_loo_rsq_css_avg-css.pdf'.format(subject)#     pdf_n_fn = '{}_task-pRF_n_css_avg-css.pdf'.format(subject)    #     merger_ecc.append('{}/{}'.format(pdf_dir,pdf_ecc_fn))#     merger_polar.append('{}/{}'.format(pdf_dir,pdf_polar_fn))#     merger_ecc.append('{}/{}'.format(pdf_dir,pdf_ecc_fn))#     merger_size.append('{}/{}'.format(pdf_dir,pdf_size_fn))#     merger_r2.append('{}/{}'.format(pdf_dir,pdf_rsq_fn))#     merger_loo_r2.append('{}/{}'.format(pdf_dir,merger_loo_r2))#     merger_n.append('{}/{}'.format(pdf_dir,pdf_n_fn))    # pdf_dir = "{}/{}/derivatives/pp_data/sub-all/fsnative/prf/pycortex".format(main_dir,project_dir)# os.makedirs(pdf_dir, exist_ok = True)# merger_ecc.write('{}/sub-all_task-pRF_ecc_css_avg-css.pdf'.format(pdf_dir))# merger_ecc.write('{}/sub-all_task-pRF_ecc_css_avg-css.pdf'.format(pdf_dir))# merger_ecc.close()