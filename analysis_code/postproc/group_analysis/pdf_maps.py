"""-----------------------------------------------------------------------------------------pdf_maps.py-----------------------------------------------------------------------------------------Goal of the script:Concat all subject prf pdf in one-----------------------------------------------------------------------------------------Input(s):sys.argv[1]: main project directorysys.argv[2]: project name (correspond to directory)sys.argv[3]: number of subjectssys.argv[4]: group-----------------------------------------------------------------------------------------Output(s):pdf files with pycortex maps-----------------------------------------------------------------------------------------To run:0. To Run on meso (not on node)1. cd to function>>  cd ~/projects/RetinoMaps/analysis_code/postproc/group_analysis2. run python command>> python pdf_maps.py [main directory] [project name] [group]-----------------------------------------------------------------------------------------Exemple:python pdf_maps.py /scratch/mszinte/data RetinoMaps 327-----------------------------------------------------------------------------------------Written by Martin Szinte (mail@martinszinte.net)Edited by Uriel Lascombes (uriel.lascombes@laposte.net)-----------------------------------------------------------------------------------------"""# General importsimport sysfrom pypdf import PdfMergerimport osimport json# Debugimport ipdbdeb = ipdb.set_trace# Inputsmain_dir = sys.argv[1]project_dir = sys.argv[2]group = sys.argv[3]# load settingswith open('../../settings.json') as f:    json_s = f.read()    analysis_info = json.loads(json_s)subjects = analysis_info['subjects']tasks = analysis_info['task_names']formats = analysis_info['formats']extensions = analysis_info['extensions']for format_, extension in zip(formats, extensions):    # # prf maps    # maps = ['ecc','polar_255','size','rsq','loo_rsq','n', 'pcm']    # for map_ in maps :     #     merger_prf = PdfMerger()    #     for subject in subjects:    #         pdf_dir = '{}/{}/derivatives/pp_data/{}/{}/prf/pycortex/flatmaps_loo-avg_css'.format(main_dir, project_dir, subject, format_)    #         pdf_fn = '{}_task-pRF_{}_css_avg-css.pdf'.format(subject,map_)    #         merger_prf.append('{}/{}'.format(pdf_dir,pdf_fn))                #     pdf_dir = "{}/{}/derivatives/pp_data/group/{}/prf/pycortex".format(main_dir,project_dir,format_)    #     os.makedirs(pdf_dir, exist_ok = True)        #     merger_prf.write('{}/group_task-pRF_{}_css_avg-css.pdf'.format(pdf_dir,map_))    #     merger_prf.close()    # print('prf maps are done')        # # corr maps     # for format_, extension in zip(formats, extensions):        #     for task in tasks:     #         merger_corr = PdfMerger()    #         for subject in subjects:    #             pdf_dir = '{}/{}/derivatives/pp_data/{}/{}/corr/pycortex/flatmaps_corr'.format(main_dir, project_dir, subject, format_)    #             pdf_fn = '{}_task-{}_correlations_corr.pdf'.format(subject,task)    #             merger_corr.append('{}/{}'.format(pdf_dir,pdf_fn))                    #         pdf_dir = "{}/{}/derivatives/pp_data/group/{}/corr/pycortex".format(main_dir, project_dir, format_)    #         os.makedirs(pdf_dir, exist_ok = True)                #         merger_corr.write('{}/group_task-{}_correlations_corr.pdf'.format(pdf_dir, task))    #         merger_corr.close()    # print('correlations maps are done')               # glm maps        maps = ['all', 'pursuit', 'saccade', 'pursuit_and_saccade', 'vision', 'vision_and_pursuit', 'vision_and_saccade', 'vision_and_pursuit_and_saccade']    for map_ in maps :         merger_prf = PdfMerger()        for subject in subjects:            pdf_dir = '{}/{}/derivatives/pp_data/{}/{}/final_stats/pycortex/flatmaps_stats'.format(main_dir, project_dir, subject, format_)            pdf_fn = '{}_final_{}.pdf'.format(subject,map_)            merger_prf.append('{}/{}'.format(pdf_dir,pdf_fn))                    pdf_dir = "{}/{}/derivatives/pp_data/group/{}/final_stats/pycortex".format(main_dir,project_dir,format_)        os.makedirs(pdf_dir, exist_ok = True)            merger_prf.write('{}/group_{}.pdf'.format(pdf_dir, map_))        merger_prf.close()     print('final stats maps are done')       # # Define permission cmd# os.system("chmod -Rf 771 {main_dir}/{project_dir}".format(main_dir=main_dir, project_dir=project_dir))# os.system("chgrp -Rf {group} {main_dir}/{project_dir}".format(main_dir=main_dir, project_dir=project_dir, group=group))